# =================================================================
# Portia AI Job Application Platform - Industrial .gitignore
# =================================================================

# ========================
# Python / Backend
# ========================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ========================
# Node.js / Frontend
# ========================

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Vite build output
dist/
dist-ssr/

# Rollup build output
build/

# Svelte kit
.svelte-kit

# Storybook build outputs
.out
.storybook-out
storybook-static

# Temporary folders
tmp/
temp/

# ========================
# Environment Variables
# ========================

# Environment files (CRITICAL for security)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.backup*
.env.backup
.env.corrupted
.env.new

# Config files with sensitive data
config.local.js
config.local.json
secrets.json
credentials.json

# API keys and tokens
api_keys.txt
tokens.txt
*.key
*.pem
*.p12
*.pfx

# Google Cloud / Firebase
firebase-adminsdk-*.json
service-account-*.json
*-firebase-adminsdk-*.json
portiahackathon-*.json

# ========================
# Database
# ========================

# SQLite
*.db
*.sqlite
*.sqlite3

# PostgreSQL
*.sql.backup
*.dump

# MySQL
*.sql

# Database backups
backup/
backups/
db_backup/

# Alembic
alembic/versions/*.py
!alembic/versions/
alembic.ini.local

# ========================
# IDE / Editor
# ========================

# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
*.swp
*.swo

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*~
*.swp
*.swo
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================
# Operating System
# ========================

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ========================
# Development Tools
# ========================

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Vagrant
.vagrant/

# Local development certificates
localhost.pem
localhost-key.pem
*.crt
*.csr

# ========================
# CI/CD & Deployment
# ========================

# GitHub Actions
.github/workflows/*.yml.backup

# Netlify
.netlify/

# Vercel
.vercel/

# Heroku
.env.production

# AWS
.aws/

# ========================
# Logs & Monitoring
# ========================

# Application logs
logs/
*.log
log.txt

# Error logs
error.log
errors.log

# Debug logs
debug.log

# PM2 logs
.pm2/

# ========================
# Temporary & Cache
# ========================

# Temporary files
tmp/
temp/
.tmp/
.temp/

# Cache directories
.cache/
cache/

# Sass cache
.sass-cache/

# Less cache
.lesshst

# ========================
# Testing
# ========================

# Test results
test-results/
test-output/
coverage/
.coverage

# E2E test artifacts
/test-results/
/playwright-report/
/blob-report/
/playwright/.cache/

# ========================
# Build Artifacts
# ========================

# Production builds
build/
dist/
public/build/

# Static files
static/build/

# Generated files
generated/
auto-generated/

# ========================
# Documentation
# ========================

# Generated documentation
docs/build/
docs/_build/
site/

# ========================
# Virtual Environments
# ========================

# Python virtual environments
venv/
venv312/
env/
ENV/
env.bak/
venv.bak/
.venv/

# ========================
# Project Specific
# ========================

# Upload directories
uploads/
upload/
media/
static/media/

# User uploads
user_uploads/

# Browser automation downloads
downloads/

# Extension builds
extension/build/
extension/dist/

# Chrome extension artifacts
*.crx
*.zip

# Development database
dev.db
development.db

# Test database
test.db

# Backup files
*.backup
*.bak
*.old

# Migration files (keep structure, ignore data)
# migrations/versions/*.py

# Profile images
profile_pics/

# Resume files
resumes/

# ========================
# Security & Secrets
# ========================

# SSH keys
id_rsa
id_rsa.pub
id_ecdsa
id_ecdsa.pub
id_ed25519
id_ed25519.pub

# GPG keys
*.gpg
*.asc

# Certificates
*.cert
*.cer
*.der

# OAuth tokens
.oauth_token

# Session files
flask_session/

# ========================
# Performance & Analytics
# ========================

# Performance monitoring
.performance/

# Analytics data
analytics/

# Metrics
metrics/

# ========================
# Custom Project Files
# ========================

# Jupyter notebooks (if you don't want to track them)
# *.ipynb

# Research and notes
research/
notes/
TODO.md
NOTES.md

# Local configuration overrides
config.local.py
settings.local.py

# ========================
# End of .gitignore
# ========================
